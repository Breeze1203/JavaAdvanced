{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/util/requestUtil\";\nimport { ElMessage } from 'element-plus';\nimport store from \"@/store\";\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false\n    };\n  },\n  methods: {\n    login() {\n      if (this.username != null && this.password != null) {\n        console.log(document.cookie.length);\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.code === 200) {\n            console.log(\"登录成功\");\n            let token = this.getCookieValue(this.username + 'token');\n            // 将token存入到store\n            store.commit('getToken', token);\n            // 获取当前用户信息\n\n            // 登录成功 跳转路由\n            this.$router.push('/home');\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        });\n      } else {\n        ElMessage.error(\"用户名或密码不能为空\");\n      }\n    },\n    getUserInfo() {},\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    }\n  },\n  mounted() {\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","store","name","data","username","password","remember","methods","login","console","log","document","cookie","length","rem","toString","then","resp","code","token","getCookieValue","commit","$router","push","error","message","getUserInfo","cookies","split","i","strings","trim","mounted","c1","c2"],"sources":["/Users/pt/Documents/code/adminflowui/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div id=\"login-box\">\n      <h1 class=\"welcome\">Welcome</h1>\n      <el-form>\n        <el-form-item>\n          <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"username\" placeholder=\"username\" size=\"small\"/>\n        </el-form-item>\n        <el-form-item>\n          <el-input prefix-icon=\"Avatar\" type=\"password\" v-model=\"password\" placeholder=\"password\" size=\"small\"/>\n        </el-form-item>\n        <el-form-item>\n          <el-checkbox id=\"check\" v-model=\"remember\"><p style=\"font-size: 15px;font-weight: 700;color: #fff;\">\n            记住密码</p></el-checkbox>\n        </el-form-item>\n      </el-form>\n      <el-button @click=\"login\">Login</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/util/requestUtil\";\nimport {ElMessage} from 'element-plus';\nimport store from \"@/store\";\n\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false\n    }\n  },\n  methods: {\n    login() {\n      if (this.username != null && this.password != null) {\n        console.log(document.cookie.length);\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.code === 200) {\n            console.log(\"登录成功\");\n            let token = this.getCookieValue(this.username+'token');\n            // 将token存入到store\n            store.commit('getToken',token);\n            // 获取当前用户信息\n\n            // 登录成功 跳转路由\n            this.$router.push('/home');\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        })\n      }else {\n        ElMessage.error(\"用户名或密码不能为空\")\n      }\n    },\n    getUserInfo(){\n\n    },\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    }\n  },\n  mounted() {\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login {\n  margin-top: 0;\n  padding: 0;\n  background-image: url(\"@/assets/background.jpg\");\n  background-size: cover;\n  display: flex; /* 将div1设置为Flex容器 */\n  justify-content: center; /* 水平居中 */\n  align-items: center; /* 垂直居中 */\n}\n\n.welcome {\n  animation: rainbow 10s infinite;\n}\n\n@keyframes rainbow {\n  10% {\n    color: red\n  }\n  14% {\n    color: orange\n  }\n  28% {\n    color: yellow\n  }\n  42% {\n    color: green\n  }\n  57% {\n    color: blue\n  }\n  71% {\n    color: indigo\n  }\n  85% {\n    color: violet\n  }\n  100% {\n    color: red\n  }\n}\n\n#login-box {\n  width: 25%;\n  height: auto;\n  margin: 10%;\n  /*margin: 0 auto;*/\n  /*margin-top: 13%;*/\n  text-align: center;\n  padding: 20px 50px;\n}\n\n#login-box h1 {\n  color: #fff;\n}\n\n#check {\n}\n\n#login-box button {\n  margin-top: 15px;\n  width: 190px;\n  height: 30px;\n  font-size: 20px;\n  font-weight: 700;\n  color: #fff;\n  background-image: linear-gradient(to right, #74ebd5 0%, #9face6 100%);\n  border: 0;\n  border-radius: 15px;\n}\n\n</style>"],"mappings":";AAsBA,OAAOA,OAAM,MAAO,oBAAoB;AACxC,SAAQC,SAAS,QAAO,cAAc;AACtC,OAAOC,KAAI,MAAO,SAAS;AAG3B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACJ,QAAO,IAAK,IAAG,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,EAAE;QAClDI,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,MAAM,CAACC,MAAM,CAAC;QACnC,IAAIC,GAAE,GAAI,IAAI,CAACR,QAAQ,CAACS,QAAQ,CAAC,CAAC;QAClChB,OAAO,CAACS,KAAK,CAAC,IAAI,CAACJ,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAES,GAAG,CAAC,CAACE,IAAI,CAACC,IAAG,IAAK;UAC5D,IAAIA,IAAI,CAACd,IAAI,CAACe,IAAG,KAAM,GAAG,EAAE;YAC1BT,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAIS,KAAI,GAAI,IAAI,CAACC,cAAc,CAAC,IAAI,CAAChB,QAAQ,GAAC,OAAO,CAAC;YACtD;YACAH,KAAK,CAACoB,MAAM,CAAC,UAAU,EAACF,KAAK,CAAC;YAC9B;;YAEA;YACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;UAC5B,OAAO;YACLvB,SAAS,CAACwB,KAAK,CAACP,IAAI,CAACd,IAAI,CAACsB,OAAO,CAAC;UACpC;QACF,CAAC;MACH,CAAC,MAAK;QACJzB,SAAS,CAACwB,KAAK,CAAC,YAAY;MAC9B;IACF,CAAC;IACDE,WAAWA,CAAA,EAAE,CAEb,CAAC;IACD;IACAN,cAAcA,CAACR,MAAM,EAAE;MACrB;MACA,IAAIe,OAAM,GAAIhB,QAAQ,CAACC,MAAM,CAACgB,KAAK,CAAC,GAAG,CAAC;MACxC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,OAAO,CAACd,MAAM,EAAEgB,CAAC,EAAE,EAAE;QACvC,IAAIC,OAAM,GAAIH,OAAO,CAACE,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;QAC1C,IAAIE,OAAO,CAAC,CAAC,MAAMlB,MAAM,EAAE;UACzB,OAAOkB,OAAO,CAAC,CAAC,CAAC;QACnB;MACF;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAIC,EAAC,GAAI,IAAI,CAACb,cAAc,CAAC,UAAU,CAAC;IACxC,IAAIc,EAAC,GAAI,IAAI,CAACd,cAAc,CAAC,UAAU,CAAC;IACxC,IAAIa,EAAC,KAAM,IAAG,IAAKC,EAAC,KAAM,IAAI,EAAE;MAC9B,IAAI,CAAC9B,QAAO,GAAI6B,EAAE;MAClB,IAAI,CAAC5B,QAAO,GAAI6B,EAAE;IACpB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}