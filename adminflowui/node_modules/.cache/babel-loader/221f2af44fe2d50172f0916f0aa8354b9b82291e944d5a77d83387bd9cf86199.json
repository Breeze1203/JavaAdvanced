{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { addRoutes } from \"@/util/routeUtils\";\nimport router from \"@/router\";\nimport request from \"@/util/requestUtil\";\nimport { ElMessage } from 'element-plus';\nimport store from \"@/store\";\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false\n    };\n  },\n  methods: {\n    login() {\n      if (this.username != null && this.password != null) {\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.message === \"登录成功\") {\n            sessionStorage.setItem(\"user\", JSON.stringify(resp.data.u));\n            let user = JSON.parse(sessionStorage.getItem(\"user\"));\n            request.initMenu(user.id).then(resp => {\n              //固定调用 mutations里面的getMenu\n              store.commit(\"getMenu\", resp.data);\n              addRoutes(resp.data);\n            });\n            router.push(\"/Home\");\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        });\n      } else {\n        ElMessage.error(\"用户名或密码不能为空\");\n      }\n    },\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    }\n  },\n  mounted() {\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n};","map":{"version":3,"names":["addRoutes","router","request","ElMessage","store","name","data","username","password","remember","methods","login","rem","toString","then","resp","message","sessionStorage","setItem","JSON","stringify","u","user","parse","getItem","initMenu","id","commit","push","error","getCookieValue","cookie","cookies","document","split","i","length","strings","trim","mounted","c1","c2"],"sources":["D:\\everything\\项目\\adminflow\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div id=\"login-box\">\r\n      <h1 class=\"welcome\">Welcome</h1>\r\n      <el-form>\r\n        <el-form-item>\r\n          <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"username\" placeholder=\"username\" size=\"small\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input prefix-icon=\"Avatar\" type=\"password\" v-model=\"password\" placeholder=\"password\" size=\"small\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-checkbox id=\"check\" v-model=\"remember\"><p style=\"font-size: 15px;font-weight: 700;color: #fff;\">\r\n            记住密码</p></el-checkbox>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-button @click=\"login\">Login</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {addRoutes} from \"@/util/routeUtils\";\r\nimport router from \"@/router\";\r\nimport request from \"@/util/requestUtil\";\r\nimport {ElMessage} from 'element-plus';\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      username: null,\r\n      password: null,\r\n      remember: false\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      if (this.username != null && this.password != null) {\r\n        let rem = this.remember.toString();\r\n        request.login(this.username, this.password, rem).then(resp => {\r\n          if (resp.data.message === \"登录成功\") {\r\n            sessionStorage.setItem(\"user\", JSON.stringify(resp.data.u));\r\n            let user=JSON.parse(sessionStorage.getItem(\"user\"));\r\n            request.initMenu(user.id).then(resp => {\r\n              //固定调用 mutations里面的getMenu\r\n              store.commit(\"getMenu\", resp.data);\r\n              addRoutes(resp.data);\r\n            })\r\n            router.push(\"/Home\");\r\n          } else {\r\n            ElMessage.error(resp.data.message);\r\n          }\r\n        })\r\n      }else {\r\n        ElMessage.error(\"用户名或密码不能为空\")\r\n      }\r\n    },\r\n    // 获取cookie\r\n    getCookieValue(cookie) {\r\n      //  按冒号分割cookie;\r\n      let cookies = document.cookie.split(\";\");\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        let strings = cookies[i].trim().split(\"=\");\r\n        if (strings[0] === cookie) {\r\n          return strings[1];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    let c1 = this.getCookieValue(\"username\");\r\n    let c2 = this.getCookieValue(\"password\");\r\n    if (c1 !== null && c2 !== null) {\r\n      this.username = c1;\r\n      this.password = c2;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  margin-top: 0;\r\n  padding: 0;\r\n  background-image: url(\"@/assets/background.jpg\");\r\n  background-size: cover;\r\n  display: flex; /* 将div1设置为Flex容器 */\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.welcome {\r\n  animation: rainbow 10s infinite;\r\n}\r\n\r\n@keyframes rainbow {\r\n  10% {\r\n    color: red\r\n  }\r\n  14% {\r\n    color: orange\r\n  }\r\n  28% {\r\n    color: yellow\r\n  }\r\n  42% {\r\n    color: green\r\n  }\r\n  57% {\r\n    color: blue\r\n  }\r\n  71% {\r\n    color: indigo\r\n  }\r\n  85% {\r\n    color: violet\r\n  }\r\n  100% {\r\n    color: red\r\n  }\r\n}\r\n\r\n#login-box {\r\n  width: 25%;\r\n  height: auto;\r\n  margin: 10%;\r\n  /*margin: 0 auto;*/\r\n  /*margin-top: 13%;*/\r\n  text-align: center;\r\n  padding: 20px 50px;\r\n}\r\n\r\n#login-box h1 {\r\n  color: #fff;\r\n}\r\n\r\n#check {\r\n}\r\n\r\n#login-box button {\r\n  margin-top: 15px;\r\n  width: 190px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  background-image: linear-gradient(to right, #74ebd5 0%, #9face6 100%);\r\n  border: 0;\r\n  border-radius: 15px;\r\n}\r\n\r\n</style>"],"mappings":";AAsBA,SAAQA,SAAS,QAAO,mBAAmB;AAC3C,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,OAAM,MAAO,oBAAoB;AACxC,SAAQC,SAAS,QAAO,cAAc;AACtC,OAAOC,KAAI,MAAO,SAAS;AAE3B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACJ,QAAO,IAAK,IAAG,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,EAAE;QAClD,IAAII,GAAE,GAAI,IAAI,CAACH,QAAQ,CAACI,QAAQ,CAAC,CAAC;QAClCX,OAAO,CAACS,KAAK,CAAC,IAAI,CAACJ,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAEI,GAAG,CAAC,CAACE,IAAI,CAACC,IAAG,IAAK;UAC5D,IAAIA,IAAI,CAACT,IAAI,CAACU,OAAM,KAAM,MAAM,EAAE;YAChCC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAACT,IAAI,CAACe,CAAC,CAAC,CAAC;YAC3D,IAAIC,IAAI,GAACH,IAAI,CAACI,KAAK,CAACN,cAAc,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;YACnDtB,OAAO,CAACuB,QAAQ,CAACH,IAAI,CAACI,EAAE,CAAC,CAACZ,IAAI,CAACC,IAAG,IAAK;cACrC;cACAX,KAAK,CAACuB,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAACT,IAAI,CAAC;cAClCN,SAAS,CAACe,IAAI,CAACT,IAAI,CAAC;YACtB,CAAC;YACDL,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;UACtB,OAAO;YACLzB,SAAS,CAAC0B,KAAK,CAACd,IAAI,CAACT,IAAI,CAACU,OAAO,CAAC;UACpC;QACF,CAAC;MACH,CAAC,MAAK;QACJb,SAAS,CAAC0B,KAAK,CAAC,YAAY;MAC9B;IACF,CAAC;IACD;IACAC,cAAcA,CAACC,MAAM,EAAE;MACrB;MACA,IAAIC,OAAM,GAAIC,QAAQ,CAACF,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;MACxC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,IAAIE,OAAM,GAAIL,OAAO,CAACG,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAACJ,KAAK,CAAC,GAAG,CAAC;QAC1C,IAAIG,OAAO,CAAC,CAAC,MAAMN,MAAM,EAAE;UACzB,OAAOM,OAAO,CAAC,CAAC,CAAC;QACnB;MACF;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAIC,EAAC,GAAI,IAAI,CAACV,cAAc,CAAC,UAAU,CAAC;IACxC,IAAIW,EAAC,GAAI,IAAI,CAACX,cAAc,CAAC,UAAU,CAAC;IACxC,IAAIU,EAAC,KAAM,IAAG,IAAKC,EAAC,KAAM,IAAI,EAAE;MAC9B,IAAI,CAAClC,QAAO,GAAIiC,EAAE;MAClB,IAAI,CAAChC,QAAO,GAAIiC,EAAE;IACpB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}