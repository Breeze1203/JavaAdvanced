{"ast":null,"code":"import instance from \"@/util/axiosUtil\";\nconst request = {\n  // 用户名登录\n  login(username, password, remember) {\n    return instance({\n      method: 'get',\n      url: '/login',\n      params: {\n        username: username,\n        password: password,\n        remember: remember\n      }\n    });\n  },\n  // 手机号登录\n  loginByPhone(phone, code, remember) {\n    return instance({\n      method: 'get',\n      url: '/loginByPhone',\n      params: {\n        phone: phone,\n        code: code,\n        remember: remember\n      }\n    });\n  },\n  // 退出登录\n  loginOut(id) {\n    return instance({\n      method: 'get',\n      url: '/loginOut',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 渲染每天登录人数\n  getCount() {\n    return instance({\n      method: 'get',\n      url: '/getCount'\n    });\n  },\n  // 初始化登录日志格式数据\n  initLogData(keyword, offset, pageSize) {\n    return instance({\n      method: 'get',\n      url: '/log/getAllLog',\n      params: {\n        keyword: keyword,\n        offset: offset,\n        pageSize: pageSize\n      }\n    });\n  },\n  // 删除日志\n  deleteLog() {\n    return instance({\n      method: 'get',\n      url: '/log/deleteLog'\n    });\n  },\n  // 组织架构的请求\n  initOrganization() {\n    return instance({\n      method: 'get',\n      url: '/Organization/'\n    });\n  },\n  // 初始化所有用户\n  initAllUser(user) {\n    return instance({\n      method: 'post',\n      url: '/getAllUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 删除节点\n  deleteNode(id) {\n    return instance({\n      method: 'get',\n      url: '/Organization/deleteById',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 添加节点\n  addNode(organization) {\n    return instance({\n      method: 'post',\n      url: '/Organization/addOrganization',\n      data: organization\n    });\n  },\n  // 修改用户\n  updateUser(user) {\n    return instance({\n      method: 'post',\n      url: '/updateUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 删除用户\n  deleteUser(id) {\n    return instance({\n      method: 'get',\n      url: '/deleteUser',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 添加用户\n  addUser(user) {\n    return instance({\n      method: 'post',\n      url: '/addUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 获取所有节点\n  getAllOrganization() {\n    return instance({\n      method: 'get',\n      url: '/Organization/getAllOrganization'\n    });\n  },\n  // 获取所有角色\n  getAllRoles() {\n    return instance({\n      method: 'get',\n      url: '/getAllRole'\n    });\n  },\n  // 获取所有权限\n  getAllPermission() {\n    return instance({\n      method: 'get',\n      url: '/getAllPermission'\n    });\n  },\n  // 根据用户获取用户的权限\n  getPermissionByRole(id) {\n    return instance({\n      method: 'get',\n      url: '/getPermissionByrId',\n      params: {\n        rid: id\n      }\n    });\n  },\n  updatePermission(permission) {\n    return instance({\n      method: 'post',\n      url: '/updatePermission',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: permission\n    });\n  },\n  // 添加角色\n  addRole(role) {\n    return instance({\n      method: 'post',\n      url: '/addRole',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: role\n    });\n  },\n  // 删除角色\n  deleteRole(id) {\n    return instance({\n      method: 'get',\n      url: '/deleteRole',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 修改用户角色\n  updateUserRole(rid, id) {\n    return instance({\n      method: 'post',\n      url: '/updateUserRole',\n      params: {\n        rid: rid,\n        id: id\n      }\n    });\n  },\n  // 修改角色\n  updateRole(role) {\n    return instance({\n      method: 'post',\n      url: '/updateRole',\n      data: role,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  // 修改用户\n  updatePassword(user) {\n    return instance({\n      method: 'post',\n      url: '/updatePassword',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 根据用户id获取用户\n  getUserById(id) {\n    return instance({\n      method: 'get',\n      url: '/getUserById',\n      params: id\n    });\n  },\n  // 用户验证码登录 获取短信验证码\n  getCode(phone) {\n    return instance({\n      method: 'get',\n      url: '/getVerification',\n      params: {\n        phone: phone\n      }\n    });\n  },\n  // 获取除当前用户外的所有用户\n  WithOutUser(id) {\n    return instance({\n      method: 'get',\n      url: '/WithOutUser',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 获取消息\n  MessageInit(id) {\n    return instance({\n      method: 'get',\n      url: '/messageInit',\n      params: {\n        mid: id\n      }\n    });\n  },\n  // 发送消息\n  sendMess(sid, rid, content) {\n    return instance({\n      method: 'post',\n      url: '/sendMessage',\n      params: {\n        sid: sid,\n        rid: rid,\n        content: content\n      }\n    });\n  },\n  // 修改消息状态是否已读\n  upState(id) {\n    return instance({\n      method: 'get',\n      url: '/updateState',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 删除消息\n  deleteMessage(id, uId) {\n    return instance({\n      method: 'post',\n      url: '/deleteMessage',\n      params: {\n        id: id,\n        uId: uId\n      }\n    });\n  }\n};\nexport default request;","map":{"version":3,"names":["instance","request","login","username","password","remember","method","url","params","loginByPhone","phone","code","loginOut","id","getCount","initLogData","keyword","offset","pageSize","deleteLog","initOrganization","initAllUser","user","headers","data","deleteNode","addNode","organization","updateUser","deleteUser","addUser","getAllOrganization","getAllRoles","getAllPermission","getPermissionByRole","rid","updatePermission","permission","addRole","role","deleteRole","updateUserRole","updateRole","updatePassword","getUserById","getCode","WithOutUser","MessageInit","mid","sendMess","sid","content","upState","deleteMessage","uId"],"sources":["/Users/pt/Documents/code/adminflowui/src/util/requestUtil.js"],"sourcesContent":["import instance from \"@/util/axiosUtil\";\n\nconst request = {\n    // 用户名登录\n    login(username, password, remember) {\n        return instance({\n            method: 'get',\n            url: '/login',\n            params: {\n                username: username,\n                password: password,\n                remember: remember\n            }\n        })\n    }\n    ,\n    // 手机号登录\n    loginByPhone(phone,code,remember){\n        return instance({\n            method: 'get',\n            url: '/loginByPhone',\n            params: {\n                phone: phone,\n                code: code,\n                remember: remember\n            }\n        })\n    }\n    ,\n    // 退出登录\n    loginOut(id) {\n        return instance({\n            method: 'get',\n            url: '/loginOut',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 渲染每天登录人数\n    getCount() {\n        return instance({\n            method: 'get',\n            url: '/getCount',\n        })\n    }\n    ,\n    // 初始化登录日志格式数据\n    initLogData(keyword, offset, pageSize) {\n        return instance({\n            method: 'get',\n            url: '/log/getAllLog',\n            params: {\n                keyword: keyword,\n                offset: offset,\n                pageSize: pageSize\n            }\n        })\n    },\n    // 删除日志\n    deleteLog() {\n        return instance({\n            method: 'get',\n            url: '/log/deleteLog',\n        })\n    },\n    // 组织架构的请求\n    initOrganization() {\n        return instance({\n            method: 'get',\n            url: '/Organization/',\n        })\n    },\n    // 初始化所有用户\n    initAllUser(user) {\n        return instance({\n            method: 'post',\n            url: '/getAllUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 删除节点\n    deleteNode(id) {\n        return instance({\n            method: 'get',\n            url: '/Organization/deleteById',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 添加节点\n    addNode(organization) {\n        return instance({\n            method: 'post',\n            url: '/Organization/addOrganization',\n            data: organization\n        })\n    },\n    // 修改用户\n    updateUser(user) {\n        return instance({\n            method: 'post',\n            url: '/updateUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 删除用户\n    deleteUser(id) {\n        return instance({\n            method: 'get',\n            url: '/deleteUser',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 添加用户\n    addUser(user) {\n        return instance({\n            method: 'post',\n            url: '/addUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 获取所有节点\n    getAllOrganization() {\n        return instance({\n            method: 'get',\n            url: '/Organization/getAllOrganization',\n        })\n    },\n    // 获取所有角色\n    getAllRoles() {\n        return instance({\n            method: 'get',\n            url: '/getAllRole',\n        })\n    },\n    // 获取所有权限\n    getAllPermission() {\n        return instance({\n            method: 'get',\n            url: '/getAllPermission',\n        })\n    },\n    // 根据用户获取用户的权限\n    getPermissionByRole(id) {\n        return instance({\n            method: 'get',\n            url: '/getPermissionByrId',\n            params: {\n                rid: id\n            }\n        })\n    },\n    updatePermission(permission) {\n        return instance({\n            method:'post',\n            url:'/updatePermission',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data:permission\n        })\n    },\n    // 添加角色\n    addRole(role){\n        return instance({\n            method:'post',\n            url:'/addRole',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data:role\n        })\n    },\n    // 删除角色\n    deleteRole(id){\n        return instance({\n            method:'get',\n            url:'/deleteRole',\n            params: {\n                id:id\n            }\n        })\n    },\n    // 修改用户角色\n    updateUserRole(rid,id){\n        return instance({\n            method:'post',\n            url:'/updateUserRole',\n            params: {\n                rid:rid,\n                id:id\n            }\n        })\n    },\n    // 修改角色\n    updateRole(role){\n        return instance({\n            method:'post',\n            url:'/updateRole',\n            data:role,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n    },\n    // 修改用户\n    updatePassword(user) {\n        return instance({\n            method: 'post',\n            url: '/updatePassword',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 根据用户id获取用户\n    getUserById(id){\n        return instance({\n            method: 'get',\n            url: '/getUserById',\n            params: id\n        })\n    },\n    // 用户验证码登录 获取短信验证码\n    getCode(phone){\n        return instance({\n            method:'get',\n            url:'/getVerification',\n            params:{\n                phone:phone\n            }\n        })\n    },\n    // 获取除当前用户外的所有用户\n    WithOutUser(id){\n        return instance({\n            method:'get',\n            url:'/WithOutUser',\n            params:{\n                id:id\n            }\n        })\n    },\n    // 获取消息\n    MessageInit(id){\n        return instance({\n            method:'get',\n            url:'/messageInit',\n            params:{\n                mid:id\n            }\n        })\n    },\n    // 发送消息\n    sendMess(sid,rid,content){\n        return instance({\n            method:'post',\n            url:'/sendMessage',\n            params:{\n                sid:sid,\n                rid:rid,\n                content:content\n            }\n        })\n    },\n    // 修改消息状态是否已读\n    upState(id){\n        return instance({\n            method:'get',\n            url:'/updateState',\n            params:{\n                id:id\n            }\n        })\n    },\n    // 删除消息\n    deleteMessage(id,uId){\n        return instance({\n            method:'post',\n            url:'/deleteMessage',\n            params:{\n               id:id,\n                uId:uId\n            }\n        })\n    }\n}\n\nexport default request;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}