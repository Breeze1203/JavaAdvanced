{"ast":null,"code":"import instance from \"@/util/axiosUtil\";\nconst request = {\n  login(username, password, remember) {\n    return instance({\n      method: 'get',\n      url: '/login',\n      params: {\n        username: username,\n        password: password,\n        remember: remember\n      }\n    });\n  },\n  // 退出登录\n  loginOut(username) {\n    return instance({\n      method: 'get',\n      url: '/loginOut',\n      params: {\n        username: username\n      }\n    });\n  },\n  // 渲染每天登录人数\n  getCount() {\n    return instance({\n      method: 'get',\n      url: '/getCount'\n    });\n  },\n  // 初始化登录日志格式数据\n  initLogData(keyword, offset, pageSize) {\n    return instance({\n      method: 'get',\n      url: '/log/getAllLog',\n      params: {\n        keyword: keyword,\n        offset: offset,\n        pageSize: pageSize\n      }\n    });\n  },\n  // 删除日志\n  deleteLog() {\n    return instance({\n      method: 'get',\n      url: '/log/deleteLog'\n    });\n  },\n  // 组织架构的请求\n  initOrganization() {\n    return instance({\n      method: 'get',\n      url: '/Organization/'\n    });\n  },\n  // 初始化所有用户\n  initAllUser() {\n    return instance({\n      method: 'get',\n      url: '/getAllUser'\n    });\n  },\n  // 删除节点\n  deleteNode(id) {\n    return instance({\n      method: 'get',\n      url: '/Organization/deleteById',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 添加节点\n  addNode(organization) {\n    return instance({\n      method: 'post',\n      url: '/Organization/addOrganization',\n      data: organization\n    });\n  },\n  // 禁用用户\n  disableUser(id, state) {\n    return instance({\n      method: 'get',\n      url: '/disableUser',\n      data: {\n        id: id,\n        state: state\n      }\n    });\n  }\n};\nexport default request;","map":{"version":3,"names":["instance","request","login","username","password","remember","method","url","params","loginOut","getCount","initLogData","keyword","offset","pageSize","deleteLog","initOrganization","initAllUser","deleteNode","id","addNode","organization","data","disableUser","state"],"sources":["/Users/pt/Documents/code/adminflowui/src/util/requestUtil.js"],"sourcesContent":["import instance from \"@/util/axiosUtil\";\n\nconst request = {\n    login(username, password, remember) {\n        return instance({\n            method: 'get',\n            url: '/login',\n            params: {\n                username: username,\n                password: password,\n                remember: remember\n            }\n        })\n    }\n    ,\n    // 退出登录\n    loginOut(username) {\n        return instance({\n            method: 'get',\n            url: '/loginOut',\n            params: {\n                username: username\n            }\n        })\n    },\n    // 渲染每天登录人数\n    getCount() {\n        return instance({\n            method: 'get',\n            url: '/getCount',\n        })\n    }\n    ,\n    // 初始化登录日志格式数据\n    initLogData(keyword, offset, pageSize) {\n        return instance({\n            method: 'get',\n            url: '/log/getAllLog',\n            params: {\n                keyword: keyword,\n                offset: offset,\n                pageSize: pageSize\n            }\n        })\n    },\n    // 删除日志\n    deleteLog(){\n        return instance({\n            method: 'get',\n            url: '/log/deleteLog',\n        })\n    },\n    // 组织架构的请求\n    initOrganization(){\n        return instance({\n            method: 'get',\n            url: '/Organization/',\n        })\n    },\n    // 初始化所有用户\n    initAllUser() {\n        return instance({\n            method: 'get',\n            url: '/getAllUser',\n        })\n    },\n    // 删除节点\n    deleteNode(id){\n        return instance({\n            method: 'get',\n            url: '/Organization/deleteById',\n            params:{\n                id:id\n            }\n        })\n    },\n    // 添加节点\n    addNode(organization){\n        return instance({\n            method: 'post',\n            url: '/Organization/addOrganization',\n            data:organization\n        })\n    },\n    // 禁用用户\n    disableUser(id,state){\n        return instance({\n            method: 'get',\n            url: '/disableUser',\n            data:{\n                id:id,\n                state:state\n            }\n        })\n    }\n}\n\nexport default request;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AAEvC,MAAMC,OAAO,GAAG;EACZC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAChC,OAAOL,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,QAAQ;MACbC,MAAM,EAAE;QACJL,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACd;IACJ,CAAC,CAAC;EACN,CAAC;EAED;EACAI,QAAQA,CAACN,QAAQ,EAAE;IACf,OAAOH,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,WAAW;MAChBC,MAAM,EAAE;QACJL,QAAQ,EAAEA;MACd;IACJ,CAAC,CAAC;EACN,CAAC;EACD;EACAO,QAAQA,CAAA,EAAG;IACP,OAAOV,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EAED;EACAI,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IACnC,OAAOd,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,gBAAgB;MACrBC,MAAM,EAAE;QACJI,OAAO,EAAEA,OAAO;QAChBC,MAAM,EAAEA,MAAM;QACdC,QAAQ,EAAEA;MACd;IACJ,CAAC,CAAC;EACN,CAAC;EACD;EACAC,SAASA,CAAA,EAAE;IACP,OAAOf,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EACD;EACAS,gBAAgBA,CAAA,EAAE;IACd,OAAOhB,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EACD;EACAU,WAAWA,CAAA,EAAG;IACV,OAAOjB,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EACD;EACAW,UAAUA,CAACC,EAAE,EAAC;IACV,OAAOnB,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,0BAA0B;MAC/BC,MAAM,EAAC;QACHW,EAAE,EAACA;MACP;IACJ,CAAC,CAAC;EACN,CAAC;EACD;EACAC,OAAOA,CAACC,YAAY,EAAC;IACjB,OAAOrB,QAAQ,CAAC;MACZM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,+BAA+B;MACpCe,IAAI,EAACD;IACT,CAAC,CAAC;EACN,CAAC;EACD;EACAE,WAAWA,CAACJ,EAAE,EAACK,KAAK,EAAC;IACjB,OAAOxB,QAAQ,CAAC;MACZM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,cAAc;MACnBe,IAAI,EAAC;QACDH,EAAE,EAACA,EAAE;QACLK,KAAK,EAACA;MACV;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAevB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}