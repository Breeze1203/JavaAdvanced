{"ast":null,"code":"import instance from \"@/util/axiosUtil\";\nconst request = {\n  login(username, password, remember) {\n    return instance({\n      method: 'get',\n      url: '/login',\n      params: {\n        username: username,\n        password: password,\n        remember: remember\n      }\n    });\n  },\n  // 退出登录\n  loginOut(id) {\n    return instance({\n      method: 'get',\n      url: '/loginOut',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 渲染每天登录人数\n  getCount() {\n    return instance({\n      method: 'get',\n      url: '/getCount'\n    });\n  },\n  // 初始化登录日志格式数据\n  initLogData(keyword, offset, pageSize) {\n    return instance({\n      method: 'get',\n      url: '/log/getAllLog',\n      params: {\n        keyword: keyword,\n        offset: offset,\n        pageSize: pageSize\n      }\n    });\n  },\n  // 删除日志\n  deleteLog() {\n    return instance({\n      method: 'get',\n      url: '/log/deleteLog'\n    });\n  },\n  // 组织架构的请求\n  initOrganization() {\n    return instance({\n      method: 'get',\n      url: '/Organization/'\n    });\n  },\n  // 初始化所有用户\n  initAllUser(user) {\n    return instance({\n      method: 'post',\n      url: '/getAllUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 删除节点\n  deleteNode(id) {\n    return instance({\n      method: 'get',\n      url: '/Organization/deleteById',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 添加节点\n  addNode(organization) {\n    return instance({\n      method: 'post',\n      url: '/Organization/addOrganization',\n      data: organization\n    });\n  },\n  // 修改用户\n  updateUser(user) {\n    return instance({\n      method: 'post',\n      url: '/updateUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 删除用户\n  deleteUser(id) {\n    return instance({\n      method: 'get',\n      url: '/deleteUser',\n      params: {\n        id: id\n      }\n    });\n  },\n  // 添加用户\n  addUser(user) {\n    return instance({\n      method: 'post',\n      url: '/addUser',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: user\n    });\n  },\n  // 获取所有节点\n  getAllOrganization() {\n    return instance({\n      method: 'get',\n      url: '/Organization/getAllOrganization'\n    });\n  },\n  // 获取所有角色\n  getAllRoles() {\n    return instance({\n      method: 'get',\n      url: '/getAllRole'\n    });\n  },\n  // 获取所有权限\n  getAllPermission() {\n    return instance({\n      method: 'get',\n      url: '/getAllPermission'\n    });\n  },\n  // 根据用户获取用户的权限\n  getPermissionByRole(id) {\n    return instance({\n      method: 'get',\n      url: '/getPermissionByrId',\n      params: {\n        rid: id\n      }\n    });\n  },\n  text() {\n    return instance({\n      method: 'post',\n      url: '',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        firstName: 'Fred'\n      }\n    });\n  }\n};\nexport default request;","map":{"version":3,"names":["instance","request","login","username","password","remember","method","url","params","loginOut","id","getCount","initLogData","keyword","offset","pageSize","deleteLog","initOrganization","initAllUser","user","headers","data","deleteNode","addNode","organization","updateUser","deleteUser","addUser","getAllOrganization","getAllRoles","getAllPermission","getPermissionByRole","rid","text","firstName"],"sources":["/Users/pt/Documents/code/adminflowui/src/util/requestUtil.js"],"sourcesContent":["import instance from \"@/util/axiosUtil\";\n\nconst request = {\n    login(username, password, remember) {\n        return instance({\n            method: 'get',\n            url: '/login',\n            params: {\n                username: username,\n                password: password,\n                remember: remember\n            }\n        })\n    }\n    ,\n    // 退出登录\n    loginOut(id) {\n        return instance({\n            method: 'get',\n            url: '/loginOut',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 渲染每天登录人数\n    getCount() {\n        return instance({\n            method: 'get',\n            url: '/getCount',\n        })\n    }\n    ,\n    // 初始化登录日志格式数据\n    initLogData(keyword, offset, pageSize) {\n        return instance({\n            method: 'get',\n            url: '/log/getAllLog',\n            params: {\n                keyword: keyword,\n                offset: offset,\n                pageSize: pageSize\n            }\n        })\n    },\n    // 删除日志\n    deleteLog() {\n        return instance({\n            method: 'get',\n            url: '/log/deleteLog',\n        })\n    },\n    // 组织架构的请求\n    initOrganization() {\n        return instance({\n            method: 'get',\n            url: '/Organization/',\n        })\n    },\n    // 初始化所有用户\n    initAllUser(user) {\n        return instance({\n            method: 'post',\n            url: '/getAllUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 删除节点\n    deleteNode(id) {\n        return instance({\n            method: 'get',\n            url: '/Organization/deleteById',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 添加节点\n    addNode(organization) {\n        return instance({\n            method: 'post',\n            url: '/Organization/addOrganization',\n            data: organization\n        })\n    },\n    // 修改用户\n    updateUser(user) {\n        return instance({\n            method: 'post',\n            url: '/updateUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 删除用户\n    deleteUser(id) {\n        return instance({\n            method: 'get',\n            url: '/deleteUser',\n            params: {\n                id: id\n            }\n        })\n    },\n    // 添加用户\n    addUser(user) {\n        return instance({\n            method: 'post',\n            url: '/addUser',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user\n        })\n    },\n    // 获取所有节点\n    getAllOrganization() {\n        return instance({\n            method: 'get',\n            url: '/Organization/getAllOrganization',\n        })\n    },\n    // 获取所有角色\n    getAllRoles() {\n        return instance({\n            method: 'get',\n            url: '/getAllRole',\n        })\n    },\n    // 获取所有权限\n    getAllPermission() {\n        return instance({\n            method: 'get',\n            url: '/getAllPermission',\n        })\n    },\n    // 根据用户获取用户的权限\n    getPermissionByRole(id) {\n        return instance({\n            method: 'get',\n            url: '/getPermissionByrId',\n            params: {\n                rid: id\n            }\n        })\n    },\n    text() {\n        return instance({\n            method: 'post',\n            url: '',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: {\n                firstName: 'Fred',\n            }\n        });\n    }\n\n}\n\nexport default request;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}