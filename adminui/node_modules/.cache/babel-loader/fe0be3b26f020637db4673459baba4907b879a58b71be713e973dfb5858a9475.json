{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/util/requestUtil\";\nimport { ElMessage } from 'element-plus';\nimport store from \"@/store\";\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false,\n      activeName: 'first',\n      Verification: null,\n      //验证码表单\n      code: null,\n      verificationCode: null,\n      rememberWithPhone: false,\n      //验证码登录是否记住密码\n      phoneNumber: null\n    };\n  },\n  methods: {\n    // 用户名登录\n    loginByName() {\n      if (this.username != null && this.password != null) {\n        if (this.Verification == null) {\n          ElMessage.error(\"请输入验证码\");\n          return;\n        }\n        if (this.Verification !== this.code) {\n          ElMessage.error(\"验证码错误，请重新输入\");\n          this.Verification = null;\n          this.generateCode();\n          return;\n        }\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.code === 200) {\n            let token = this.getCookieValue(resp.data.user.username + 'token');\n            // 将token存入到store\n            store.commit('getToken', token);\n            // 获取当前用户信息\n            let user = JSON.stringify(resp.data.user);\n            sessionStorage.setItem(\"user\", user);\n            this.$router.push('/home');\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        });\n      } else {\n        ElMessage.error(\"用户名或密码不能为空\");\n      }\n    },\n    // 短信验证码登录\n    loginByPhone() {\n      if (this.verificationCode == null) {\n        ElMessage.error(\"请输入短信验证码\");\n        return;\n      }\n      request.loginByPhone(this.phoneNumber, this.verificationCode, this.rememberWithPhone).then(resp => {\n        if (resp.data.code === 200) {\n          let token = this.getCookieValue(resp.data.user.username + 'token');\n          // 将token存入到store\n          store.commit('getToken', token);\n          // 获取当前用户信息\n          let user = JSON.stringify(resp.data.user);\n          sessionStorage.setItem(\"user\", user);\n          this.$router.push('/home');\n          this.phoneNumber = null;\n          this.verificationCode = null;\n        } else {\n          ElMessage.error(resp.data.message);\n        }\n      });\n    },\n    //获取验证码\n    getCode() {\n      if (this.phoneNumber == null) {\n        ElMessage.error(\"请输入手机号\");\n        return;\n      }\n      request.getCode(this.phoneNumber).then(resp => {\n        if (resp.data.code === 200) {\n          ElMessage.success(resp.data.message);\n        } else {\n          ElMessage.error(resp.data.message);\n        }\n      });\n    },\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    },\n    // 生成验证码\n    generateCode() {\n      const canvas = this.$refs.canvas;\n      const context = canvas.getContext('2d');\n      const width = canvas.width;\n      const height = canvas.height;\n      // 生成随机验证码\n      const code = this.generateRandomCode();\n      this.code = code;\n      // 绘制验证码\n      context.clearRect(0, 0, width, height);\n\n      // 随机生成彩色字体\n      let colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFA500\", \"#800080\"];\n      let randomColor = colors[Math.floor(Math.random() * colors.length)];\n      context.font = '60px Arial';\n      context.fillStyle = randomColor;\n      context.fillText(code, 90, 120);\n\n      // 添加干扰线\n      for (let i = 0; i < 5; i++) {\n        // 随机位置和颜色\n        let x1 = Math.random() * width;\n        let y1 = Math.random() * height;\n        let x2 = Math.random() * width;\n        let y2 = Math.random() * height;\n        let lineColor = colors[Math.floor(Math.random() * colors.length)];\n\n        // 绘制线段\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.strokeStyle = lineColor;\n        context.lineWidth = 1;\n        context.stroke();\n      }\n    },\n    generateRandomCode() {\n      // 随机生成一个四位数验证码\n      let code = '';\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 4; i++) {\n        const randomIndex = Math.floor(Math.random() * characters.length);\n        code += characters.charAt(randomIndex);\n      }\n      return code;\n    }\n  },\n  mounted() {\n    this.generateCode();\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","store","name","data","username","password","remember","activeName","Verification","code","verificationCode","rememberWithPhone","phoneNumber","methods","loginByName","error","generateCode","rem","toString","login","then","resp","token","getCookieValue","user","commit","JSON","stringify","sessionStorage","setItem","$router","push","message","loginByPhone","getCode","success","cookie","cookies","document","split","i","length","strings","trim","canvas","$refs","context","getContext","width","height","generateRandomCode","clearRect","colors","randomColor","Math","floor","random","font","fillStyle","fillText","x1","y1","x2","y2","lineColor","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","characters","randomIndex","charAt","mounted","c1","c2"],"sources":["/Users/pt/Documents/code/adminflowui/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div id=\"login-box\">\n      <div class=\"left-div\">\n      </div>\n      <div class=\"right-div\">\n        <h1 class=\"welcome\">AdminFlow</h1>\n        <el-tabs v-model=\"activeName\">\n          <el-tab-pane label=\"用户名登录\" name=\"first\">\n            <el-form>\n              <el-form-item size=\"default\">\n                <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"username\" placeholder=\"username\"/>\n              </el-form-item>\n              <el-form-item size=\"default\">\n                <el-input prefix-icon=\"Lock\" type=\"password\" :show-password=\"true\" v-model=\"password\"\n                          placeholder=\"password\">\n                </el-input>\n              </el-form-item>\n              <div style=\"display: flex; justify-content: space-between;height: 30px\">\n                <el-input v-model=\"Verification\" type=\"text\" placeholder=\"请输入验证码\">\n                </el-input>\n                <canvas @click=\"generateCode\" ref=\"canvas\" style=\"height: 100%;width: 100%;\"></canvas>\n              </div>\n              <el-form-item size=\"default\">\n                <el-checkbox id=\"check\" v-model=\"remember\"><p style=\"font-size: 15px;font-weight: 700\">\n                  记住我</p></el-checkbox>\n              </el-form-item>\n            </el-form>\n            <el-button @click=\"loginByName\" class=\"loginButton\">Login</el-button>\n          </el-tab-pane>\n          <el-tab-pane label=\"手机号登录\" name=\"two\">\n            <el-form>\n              <el-form-item>\n                <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"phoneNumber\" placeholder=\"请输入手机号\"/>\n              </el-form-item>\n              <div style=\"display: flex; justify-content: space-between;height: 30px\">\n                <el-input prefix-icon=\"Cellphone\" v-model=\"verificationCode\" type=\"text\" placeholder=\"请输入验证码\"/>\n                <el-button @click=\"getCode\" style=\"width: 140px;border: none\">获取验证码</el-button>\n              </div>\n              <el-form-item>\n                <el-checkbox id=\"check\" v-model=\"rememberWithPhone\"><p style=\"font-size: 15px;font-weight: 700\">\n                  记住我</p></el-checkbox>\n              </el-form-item>\n            </el-form>\n            <el-button @click=\"loginByPhone\" class=\"loginButton\">Login</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/util/requestUtil\";\nimport {ElMessage} from 'element-plus';\nimport store from \"@/store\";\n\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false,\n      activeName: 'first',\n      Verification: null,//验证码表单\n      code: null,\n      verificationCode: null,\n      rememberWithPhone: false,//验证码登录是否记住密码\n      phoneNumber: null\n    }\n  },\n  methods: {\n    // 用户名登录\n    loginByName() {\n      if (this.username != null && this.password != null) {\n        if (this.Verification == null) {\n          ElMessage.error(\"请输入验证码\");\n          return;\n        }\n        if (this.Verification !== this.code) {\n          ElMessage.error(\"验证码错误，请重新输入\");\n          this.Verification = null;\n          this.generateCode();\n          return;\n        }\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.code === 200) {\n            let token = this.getCookieValue(resp.data.user.username + 'token');\n            // 将token存入到store\n            store.commit('getToken', token);\n            // 获取当前用户信息\n            let user = JSON.stringify(resp.data.user);\n            sessionStorage.setItem(\"user\", user);\n            this.$router.push('/home');\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        })\n      } else {\n        ElMessage.error(\"用户名或密码不能为空\");\n      }\n    },\n    // 短信验证码登录\n    loginByPhone() {\n      if (this.verificationCode == null) {\n        ElMessage.error(\"请输入短信验证码\");\n        return;\n      }\n      request.loginByPhone(this.phoneNumber, this.verificationCode, this.rememberWithPhone).then(resp => {\n        if(resp.data.code===200){\n          let token = this.getCookieValue(resp.data.user.username + 'token');\n          // 将token存入到store\n          store.commit('getToken', token);\n          // 获取当前用户信息\n          let user = JSON.stringify(resp.data.user);\n          sessionStorage.setItem(\"user\", user);\n          this.$router.push('/home');\n          this.phoneNumber=null;\n          this.verificationCode=null;\n        }else {\n          ElMessage.error(resp.data.message);\n        }\n      })\n    }\n    ,//获取验证码\n    getCode() {\n      if (this.phoneNumber == null) {\n        ElMessage.error(\"请输入手机号\");\n        return;\n      }\n      request.getCode(this.phoneNumber).then(resp => {\n        if (resp.data.code === 200) {\n          ElMessage.success(resp.data.message);\n        } else {\n          ElMessage.error(resp.data.message);\n        }\n      })\n    },\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    },\n    // 生成验证码\n    generateCode() {\n      const canvas = this.$refs.canvas;\n      const context = canvas.getContext('2d');\n      const width = canvas.width;\n      const height = canvas.height;\n      // 生成随机验证码\n      const code = this.generateRandomCode();\n      this.code = code;\n      // 绘制验证码\n      context.clearRect(0, 0, width, height);\n\n      // 随机生成彩色字体\n      let colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFA500\", \"#800080\"];\n      let randomColor = colors[Math.floor(Math.random() * colors.length)];\n      context.font = '60px Arial';\n      context.fillStyle = randomColor;\n      context.fillText(code, 90, 120);\n\n// 添加干扰线\n      for (let i = 0; i < 5; i++) {\n        // 随机位置和颜色\n        let x1 = Math.random() * width;\n        let y1 = Math.random() * height;\n        let x2 = Math.random() * width;\n        let y2 = Math.random() * height;\n        let lineColor = colors[Math.floor(Math.random() * colors.length)];\n\n        // 绘制线段\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.strokeStyle = lineColor;\n        context.lineWidth = 1;\n        context.stroke();\n      }\n    },\n    generateRandomCode() {\n      // 随机生成一个四位数验证码\n      let code = '';\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 4; i++) {\n        const randomIndex = Math.floor(Math.random() * characters.length);\n        code += characters.charAt(randomIndex);\n      }\n      return code;\n    },\n  }\n  ,\n  mounted() {\n    this.generateCode();\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login {\n  margin-top: 0;\n  padding: 0;\n  position: relative;\n  background-size: cover;\n  display: flex; /* 将div1设置为Flex容器 */\n  justify-content: center; /* 水平居中 */\n  align-items: center; /* 垂直居中 */\n}\n\n.welcome {\n  animation: rainbow 10s infinite;\n}\n\n.left-div {\n  float: left;\n  width: 50%;\n  height: 100%;\n  top: 0;\n  background-image: url('@/assets/background.jpeg');\n  margin-right: 15px; /* 调整左右两个子元素之间的间距 */\n  background-size: cover; /* 完全覆盖容器 */\n}\n\n.right-div {\n  float: right;\n  width: 50%;\n  height: 100%;\n  margin-right: 15px; /* 调整左右两个子元素之间的间距 */\n  top: 0;\n}\n\n@keyframes rainbow {\n  10% {\n    color: red\n  }\n  14% {\n    color: orange\n  }\n  28% {\n    color: yellow\n  }\n  42% {\n    color: green\n  }\n  57% {\n    color: blue\n  }\n  71% {\n    color: indigo\n  }\n  85% {\n    color: violet\n  }\n  100% {\n    color: red\n  }\n}\n\n\n#login-box {\n  width: 50%;\n  height: 370px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n  display: flex;\n  justify-content: space-between;\n  margin: 10%;\n  padding: 30px 20px;\n}\n\n#login-box h1 {\n  color: #fff;\n}\n\n\n.loginButton {\n  margin-top: 15px;\n  width: 100%;\n  height: 30px;\n  font-size: 20px;\n  font-weight: 700;\n  color: #fff;\n  background-image: linear-gradient(to right, #74ebd5 0%, #9face6 100%);\n  border: 0;\n  border-radius: 15px;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}