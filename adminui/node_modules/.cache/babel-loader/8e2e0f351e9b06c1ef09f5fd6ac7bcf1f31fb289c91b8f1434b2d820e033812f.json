{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ef68022e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = {\n  id: \"login-box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left-div\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"right-div\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"welcome\"\n}, \"AdminFlow\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"space-between\",\n    \"height\": \"30px\"\n  }\n};\nconst _hoisted_7 = {\n  ref: \"canvas\",\n  style: {\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"15px\",\n    \"font-weight\": \"700\"\n  }\n}, \" 记住我\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"15px\",\n    \"font-weight\": \"700\"\n  }\n}, \" 记住我\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createVNode(_component_el_tabs, {\n    modelValue: $data.activeName,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.activeName = $event),\n    onTabChange: $options.generateCode\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"用户名登录\",\n      name: \"first\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, null, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          size: \"default\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            \"prefix-icon\": \"Avatar\",\n            type: \"text\",\n            modelValue: $data.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n            placeholder: \"username\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          size: \"default\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            \"prefix-icon\": \"Lock\",\n            type: \"password\",\n            modelValue: $data.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n            placeholder: \"password\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input, {\n          type: \"text\",\n          placeholder: \"请输入验证码\"\n        }), _createElementVNode(\"canvas\", _hoisted_7, null, 512 /* NEED_PATCH */)]), _createVNode(_component_el_form_item, {\n          size: \"default\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            id: \"check\",\n            modelValue: $data.remember,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.remember = $event)\n          }, {\n            default: _withCtx(() => [_hoisted_8]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"验证码登录\",\n      name: \"two\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, null, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            \"prefix-icon\": \"Avatar\",\n            type: \"text\",\n            modelValue: _ctx.phoneNumber,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.phoneNumber = $event),\n            placeholder: \"请输入手机号\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            \"prefix-icon\": \"ChatLineRound\",\n            type: \"password\",\n            modelValue: $data.password,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password = $event),\n            placeholder: \"请输入验证码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            id: \"check\",\n            modelValue: $data.remember,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.remember = $event)\n          }, {\n            default: _withCtx(() => [_hoisted_9]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onTabChange\"]), _createVNode(_component_el_button, {\n    onClick: $options.login\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Login\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","style","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_el_tabs","$data","activeName","$event","onTabChange","$options","generateCode","_component_el_tab_pane","label","name","_component_el_form","_component_el_form_item","size","_component_el_input","type","username","placeholder","password","_hoisted_6","_hoisted_7","_component_el_checkbox","remember","_hoisted_8","_ctx","phoneNumber","_hoisted_9","_component_el_button","onClick","login"],"sources":["/Users/pt/Documents/code/adminflowui/src/components/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div id=\"login-box\">\n      <div class=\"left-div\"></div>\n      <div class=\"right-div\">\n        <h1 class=\"welcome\">AdminFlow</h1>\n        <el-tabs v-model=\"activeName\" @tab-change=\"generateCode\">\n          <el-tab-pane label=\"用户名登录\" name=\"first\">\n            <el-form>\n              <el-form-item size=\"default\">\n                <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"username\" placeholder=\"username\"/>\n              </el-form-item>\n              <el-form-item size=\"default\">\n                <el-input prefix-icon=\"Lock\" type=\"password\" v-model=\"password\" placeholder=\"password\"/>\n              </el-form-item>\n              <div style=\"display: flex; justify-content: space-between;height: 30px\">\n                <el-input type=\"text\" placeholder=\"请输入验证码\"/>\n                <canvas ref=\"canvas\" style=\"height: 100%;width: 100%;\"></canvas>\n              </div>\n              <el-form-item size=\"default\">\n                <el-checkbox id=\"check\" v-model=\"remember\"><p style=\"font-size: 15px;font-weight: 700\">\n                  记住我</p></el-checkbox>\n              </el-form-item>\n            </el-form>\n          </el-tab-pane>\n          <el-tab-pane label=\"验证码登录\" name=\"two\">\n            <el-form>\n              <el-form-item>\n                <el-input prefix-icon=\"Avatar\" type=\"text\" v-model=\"phoneNumber\" placeholder=\"请输入手机号\"/>\n              </el-form-item>\n              <el-form-item>\n                <el-input prefix-icon=\"ChatLineRound\" type=\"password\" v-model=\"password\" placeholder=\"请输入验证码\"/>\n              </el-form-item>\n              <el-form-item>\n                <el-checkbox id=\"check\" v-model=\"remember\"><p style=\"font-size: 15px;font-weight: 700\">\n                  记住我</p></el-checkbox>\n              </el-form-item>\n            </el-form>\n          </el-tab-pane>\n        </el-tabs>\n        <el-button @click=\"login\">Login</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/util/requestUtil\";\nimport {ElMessage} from 'element-plus';\nimport store from \"@/store\";\n\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n      remember: false,\n      activeName: 'first'\n    }\n  },\n  methods: {\n    login() {\n      if (this.username != null && this.password != null) {\n        let rem = this.remember.toString();\n        request.login(this.username, this.password, rem).then(resp => {\n          if (resp.data.code === 200) {\n            let token = this.getCookieValue(this.username + 'token');\n            // 将token存入到store\n            store.commit('getToken', token);\n            // 获取当前用户信息\n            let user = JSON.stringify(resp.data.user);\n            sessionStorage.setItem(\"user\", user);\n            this.$router.push('/home');\n          } else {\n            ElMessage.error(resp.data.message);\n          }\n        })\n      } else {\n        ElMessage.error(\"用户名或密码不能为空\");\n      }\n    }\n    ,\n    // 获取cookie\n    getCookieValue(cookie) {\n      //  按冒号分割cookie;\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let strings = cookies[i].trim().split(\"=\");\n        if (strings[0] === cookie) {\n          return strings[1];\n        }\n      }\n    },\n    // 生成验证码\n    generateCode() {\n      const canvas = this.$refs.canvas;\n      const context = canvas.getContext('2d');\n      const width = canvas.width;\n      const height = canvas.height;\n      // 生成随机验证码\n      const code = this.generateRandomCode();\n      // 绘制验证码\n      context.clearRect(0, 0, width, height);\n      context.font = '60px Arial';\n      context.fillStyle = 'black';\n      context.fillText(code, 90, 120);\n      // 随机生成彩色字体\n      var colors = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFA500\", \"#800080\"];\n      var randomColor = colors[Math.floor(Math.random() * colors.length)];\n      context.font = \"36px Arial\";\n      context.fillStyle = randomColor;\n      context.fillText(code, 90, 120);\n\n// 添加干扰线\n      for (let i = 0; i < 4; i++) {\n        // 随机位置和颜色\n        let x1 = Math.random() * width;\n        let y1 = Math.random() * height;\n        let x2 = Math.random() * width;\n        let y2 = Math.random() * height;\n        let lineColor = colors[Math.floor(Math.random() * colors.length)];\n\n        // 绘制线段\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.strokeStyle = lineColor;\n        context.lineWidth = 1;\n        context.stroke();\n      }\n    },\n    generateRandomCode() {\n      // 随机生成一个四位数验证码\n      let code = '';\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 5; i++) {\n        const randomIndex = Math.floor(Math.random() * characters.length);\n        code += characters.charAt(randomIndex);\n      }\n      return code;\n    },\n  }\n  ,\n  mounted() {\n    this.generateCode();\n    let c1 = this.getCookieValue(\"username\");\n    let c2 = this.getCookieValue(\"password\");\n    if (c1 !== null && c2 !== null) {\n      this.username = c1;\n      this.password = c2;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login {\n  margin-top: 0;\n  padding: 0;\n  background-size: cover;\n  display: flex; /* 将div1设置为Flex容器 */\n  justify-content: center; /* 水平居中 */\n  align-items: center; /* 垂直居中 */\n}\n\n.welcome {\n  animation: rainbow 10s infinite;\n}\n\n.left-div {\n  float: left;\n  width: 50%;\n  padding: 10px;\n}\n\n.right-div {\n  float: right;\n  width: 50%;\n  padding: 10px;\n}\n\n@keyframes rainbow {\n  10% {\n    color: red\n  }\n  14% {\n    color: orange\n  }\n  28% {\n    color: yellow\n  }\n  42% {\n    color: green\n  }\n  57% {\n    color: blue\n  }\n  71% {\n    color: indigo\n  }\n  85% {\n    color: violet\n  }\n  100% {\n    color: red\n  }\n}\n\n\n#login-box {\n  width: 50%;\n  height: auto;\n  margin: 10%;\n  background-color: #f2f2f2;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  /*margin: 0 auto;*/\n  /*margin-top: 13%;*/\n  padding: 20px 50px;\n}\n\n#login-box h1 {\n  color: #fff;\n}\n\n\n#login-box button {\n  margin-top: 15px;\n  width: 100%;\n  height: 30px;\n  font-size: 20px;\n  font-weight: 700;\n  color: #fff;\n  background-image: linear-gradient(to right, #74ebd5 0%, #9face6 100%);\n  border: 0;\n  border-radius: 15px;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}